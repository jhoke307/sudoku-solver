// This script based on one in swt-bling[1] which is under the following
// license:
// [1] https://raw.githubusercontent.com/ReadyTalk/swt-bling/master/gradle/swt.gradle
// 
// The MIT License (MIT)
// 
// Copyright (c) 2013 ReadyTalk
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy of
// this software and associated documentation files (the "Software"), to deal in
// the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do so,
// subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

public String getSWTWindowingLibrary(String platform) {
  switch (platform.replaceAll(' ', '').toLowerCase()) {
    case ~/.*linux.*/:  return 'gtk'
    case ~/.*darwin.*/: return 'cocoa'
    case ~/.*osx.*/:    return 'cocoa'
    case ~/.*win.*/:    return 'win32'
    default:            return null
  }
}

public String getSWTArch(String arch) {
  switch(arch) {
    case ~/.*64.*/: return 'x86_64'
    default:        return 'x86'
  }
}

public String getSWTPlatform(String platform) {
  switch(platform.replaceAll(' ', '').toLowerCase()) {
    case ~/.*linux.*/:  return 'linux'
    case ~/.*darwin.*/: return 'macosx'
    case ~/.*osx.*/:    return 'macosx'
    case ~/.*win.*/:    return 'win32'
    default:            return platform
  }
}

ext {
  swtWindowingLibrary = getSWTWindowingLibrary(System.properties['os.name'])
  swtArch = getSWTArch(System.properties['os.arch'])
  swtPlatform = getSWTPlatform(System.properties['os.name'])
  swtVersion = '4.3'
  swtArtifactName = "org.eclipse.swt.${swtWindowingLibrary}.${swtPlatform}.${swtArch}"
}
